<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.powernode.mybatis.mapper.CarMapper">

    <!--<select id="selectTotal" resultType="java.lang.Long">-->
    <select id="selectTotal" resultType="_long">
        select count(*) from t_car
    </select>

    <select id="selectAllByMapUnderscoreToCamelCase" resultType="Car">
        select * from t_car
    </select>

    <!--
        1.专门定义一个结果映射，在这个结果映射当中指定数据库表的字段名和Java类的属性名的对应关系。
        2. type属性：用来指定POJO类的类名。
        3. id属性：指定resultMap的唯一标识。这个id将来要在select标签中使用。
    -->
    <resultMap id="carResultMap" type="Car">
        <!--如果数据库表中有主键，一般都是有主键，要不然不符合数据库设计第一范式。-->
        <!--如果有主键，建议这里配置一个id标签，注意：这不是必须的。但是官方的解释是什么呢？这样的配置可以让mybatis提高效率。-->
        <id property="id" column="id"/>
        <!--<result property="id" column="id"/>-->
        <!--property后面填写POJO类的属性名-->
        <!--column后面填写数据库表的字段名-->
        <result property="carNum" column="car_num" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <!--如果column和property是一样的，这个可以省略。-->
        <!--<result property="brand" column="brand"/>-->
        <result property="guidePrice" column="guide_price"/>
        <result property="produceTime" column="produce_time"/>
        <result property="carType" column="car_type" javaType="string" jdbcType="VARCHAR"/>
    </resultMap>

    <!--select标签的resultMap属性，用来指定使用哪个结果映射。resultMap后面的值是resultMap的id-->
    <select id="selectAllByResultMap" resultMap="carResultMap">
        select * from t_car
    </select>

    <select id="selectAllRetMap" resultType="map">
        select * from t_car
    </select>

    <!--这个resultType不是list，是map-->
    <select id="selectAllRetListMap" resultType="map">
        select * from t_car
    </select>

    <!--resultType="java.util.Map"有别名：map-->
    <select id="selectByIdRetMap" resultType="map">
        select * from t_car where id = #{id}
    </select>

    <!--声明一个SQL片段-->
    <sql id="carColumnNameSql">
        id,
        car_num as carNum,
        brand,
        guide_price as guidePrice,
        produce_time as produceTime,
        car_type as carType
    </sql>

    <select id="selectById2" resultType="car">
        select
            <!--将声明的sql片段包含进来。-->
            <include refid="carColumnNameSql"/>
        from t_car where id = #{id}
    </select>

    <select id="selectByBrandLike" resultType="car">
        select
            <include refid="carColumnNameSql"/>
        from t_car
        where
            brand like "%"#{brand}"%"
    </select>

    <select id="selectAll" resultType="car">
        select
            <include refid="carColumnNameSql"/>
        from t_car
    </select>


    <select id="selectById" resultType="car">
        select
            <include refid="carColumnNameSql"/>
        from t_car where id = #{id}
    </select>

</mapper>
